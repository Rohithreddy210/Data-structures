#include <stdio.h>

void quickSort(int arr[], int left, int right) {
  int i, j, pivot, temp;
  
  if (left < right) {
    pivot = left;
    i = left;
    j = right;
    
    while (i < j) {
      while (arr[i] <= arr[pivot] && i < right) {
        i++;
      }
      while (arr[j] > arr[pivot]) {
        j--;
      }
      if (i < j) {
        temp = arr[i];
        arr[i] = arr[j];
        arr[j] = temp;
      }
    }
    
    temp = arr[pivot];
    arr[pivot] = arr[j];
    arr[j] = temp;
    
    quickSort(arr, left, j - 1);
    quickSort(arr, j + 1, right);
  }
}

int main() {
  int arr[] = {10, 7, 8, 9, 1, 5};
  int n = sizeof(arr) / sizeof(arr[0]);
  
  int i;
  
  printf("Before Quick Sort:\n");
  for (i = 0; i < n; i++) {
    printf("%d ", arr[i]);
  }
  
  quickSort(arr, 0, n - 1);
  
  printf("\nAfter Quick Sort:\n");
  for (i = 0; i < n; i++) {
    printf("%d ", arr[i]);
  }
  
  return 0;
}

OUTPUT

Before Quick Sort:
10 7 8 9 1 5
After Quick Sort:
1 5 7 8 9 10
