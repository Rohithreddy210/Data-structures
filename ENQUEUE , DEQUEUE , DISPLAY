#include <stdio.h>
#include <stdlib.h>

#define MAX_SIZE 100

struct Queue {
    int front;
    int rear;
    int arr[MAX_SIZE];
};

void enqueue(struct Queue *q, int value) {
    if (q->rear == MAX_SIZE - 1) {
        printf("Queue overflow\n");
        return;
    }

    q->arr[++q->rear] = value;
}

int dequeue(struct Queue *q) {
    if (q->front > q->rear) {
        printf("Queue underflow\n");
        return -1;
    }

    return q->arr[q->front++];
}

void display(struct Queue q) {
    int i;

    if (q.front > q.rear) {
        printf("Queue is empty\n");
        return;
    }

    printf("Queue elements are: \n");
    for (i = q.front; i <= q.rear; i++)
        printf("%d ", q.arr[i]);
    printf("\n");
}

int main() {
    struct Queue q = {0, -1};
    int choice, value;

    while (1) {
        printf("1. Enqueue\n");
        printf("2. Dequeue\n");
        printf("3. Display\n");
        printf("4. Exit\n");

        printf("Enter your choice: ");
        scanf("%d", &choice);

        switch (choice) {
        case 1:
            printf("Enter the value to be enqueued: ");
            scanf("%d", &value);
            enqueue(&q, value);
            break;
        case 2:
            value = dequeue(&q);
            if (value != -1)
                printf("Dequeued value: %d\n", value);
            break;
        case 3:
            display(q);
            break;
        case 4:
            exit(0);
        default:
            printf("Invalid choice\n");
        }
    }

    return 0;
}

OUTPUT

1. Enqueue
2. Dequeue
3. Display
4. Exit
Enter your choice: 1
Enter the value to be enqueued: 123456

