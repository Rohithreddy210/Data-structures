#include <stdio.h>
#include <stdlib.h>

#define MAX_VERTICES 100

int n;  // number of vertices
int adj[MAX_VERTICES][MAX_VERTICES];  // adjacency matrix
int visited[MAX_VERTICES];  // flag to track visited vertices

void DFS(int v) {
  int i;
  visited[v] = 1;
  printf("%d ", v);
  for (i = 0; i < n; i++) {
    if (adj[v][i] == 1 && !visited[i]) {
      DFS(i);
    }
  }
}

int main() {
  int i, j;

  // read the number of vertices
  printf("Enter the number of vertices: ");
  scanf("%d", &n);

  // read the adjacency matrix
  printf("Enter the adjacency matrix:\n");
  for (i = 0; i < n; i++) {
    for (j = 0; j < n; j++) {
      scanf("%d", &adj[i][j]);
    }
  }

  // initialize visited array
  for (i = 0; i < n; i++) {
    visited[i] = 0;
  }

  // call DFS from the first vertex
  printf("DFS from the first vertex: ");
  DFS(0);
  printf("\n");

  return 0;
}

 OUTPUT
 
 Enter the number of vertices: 3
Enter the adjacency matrix:
1 0 0
1 1 0
0 1 0
DFS from the first vertex: 0
